services:
  web:
    build: ./
    container_name: django_prod
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis
    volumes:
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: pg_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata_prod:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis_prod

  nginx:
    image: nginx:stable-alpine
    container_name: nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
      - static_volume:/app/staticfiles
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM;
             while :; do certbot renew --webroot -w /var/www/certbot;
             sleep 12h & wait $${!}; done"

volumes:
  pgdata_prod:
  static_volume:
